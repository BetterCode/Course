# criar o projeto
play new todo

# criar projeto eclipse
cd todo
play eclipsify

# criar task controller
# criar task model

# configure a base de dados no arquivo application.conf

db=mem

# condigure o modulo crud no arquivo /conf/application.conf

# Import the crud module
module.crud=${play.path}/modules/crud

# rode play eclipsify de novo (novos modulos adicionados)
# restarte o server

# edit o arquivo routes:

# Import CRUD routes
*      /tasks              module:crud

# Altere a listagem

 play crud:ov --template Tasks/list

# change crudListTable to:

#{crud.table fields:['executor', 'description', 'started', 'finished'] }
		#{crud.custom 'started'}
			#{if !object.isStarted()}
				<a href="@{Tasks.start(object.id)}"> Start</a>
			#{/if}
			#{else}
				${object.started_at()}
			#{/else}
		#{/crud.custom}
		#{crud.custom 'finished'}
			#{if !object.isFinished()}
				<a href="@{Tasks.finish(object.id)}"> Finish</a>
			#{/if}
			#{else}
				${object.finished_at()}
			#{/else}
		#{/crud.custom}
	#{/crud.table}

# implements Tasks methods:

public static void start(Long id) {
	Task task = Task.findById(id);
	task.start();
	task.save();
	redirect("Tasks.list");
}

public static void finish(Long id) {
	Task task = Task.findById(id);
	task.finish();
	task.save();
	redirect("Tasks.list");
	
}

# implements task

@Entity
public final class Task extends Model {

	public @Required
	String executor;
	public @Required
	String description;
	private Date started;
	private Date finished;

	private Task(String executor, String descriptio) {
		super();
		this.executor = executor;
		this.description = descriptio;
	}

	public void start() {
		started = new Date();
	}

	public boolean isStarted() {
		return started != null;
	}

	public String started_at() {
		return started.toString();
	}

	public void finish() {
		finished = new Date();
	}

	public boolean isFinished() {
		return finished != null;
	}

	public String finished_at() {
		return finished.toString();
	}
}
